// Map.hpp

/***********************************************************************************
 * This file is part of PacMan game                                                *
 *                                                                                 *
 * Copyright (C) 2022 felipx                                                       *
 * https://github.com/felipx/                                                      *
 *                                                                                 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy    *
 * of this software and associated documentation files (the "Software"), to deal   *
 * in the Software without restriction, including without limitation the rights    *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is           *
 * furnished to do so, subject to the following conditions:                        *
 * The above copyright notice and this permission notice shall be included in all  *
 * copies or substantial portions of the Software.                                 *
 *                                                                                 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   *
 * SOFTWARE.                                                                       *
 ***********************************************************************************/

#ifndef INCLUDE_MAP_
#define INCLUDE_MAP_

#include "SFML/Graphics.hpp"

class Map : public sf::Drawable, public sf::Transformable
{
public:
    Map();
    Map(const std::string&, sf::Vector2u, unsigned int, unsigned int);
    bool load(const std::string&, sf::Vector2u, const int*, unsigned int, unsigned int);
    bool detectCollision(float, float);
    virtual void draw(sf::RenderTarget&, sf::RenderStates) const;
private:
    sf::VertexArray mVertices;
    sf::Texture textureSet;
};

const int level[] =
{
	00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	02, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 7, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	01,99,99,99,99,99,99,99,99,99,99,99,99, 8, 9,99,99,99,99,99,99,99,99,99,99,99,99, 5,
	01,99,15,17,17,16,99,15,17,17,17,16,99, 8, 9,99,15,17,17,17,16,99,15,17,17,16,99, 5,
	01,98, 8, 0, 0, 9,99, 8, 0, 0, 0, 9,99, 8, 9,99, 8, 0, 0, 0, 9,99, 8, 0, 0, 9,98, 5,
	01,99,13,18,18,14,99,13,18,18,18,14,99,13,14,99,13,18,18,18,14,99,13,18,18,14,99, 5,
	01,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99, 5,
	01,99,15,17,17,16,99,15,16,99,15,17,17,17,17,17,17,16,99,15,16,99,15,17,17,16,99, 5,
	01,99,13,18,18,14,99, 8, 9,99,13,18,18,22,20,18,18,14,99, 8, 9,99,13,18,18,14,99, 5,
	01,99,99,99,99,99,99, 8, 9,99,99,99,99, 8, 9,99,99,99,99, 8, 9,99,99,99,99,99,99, 5,
	10,11,11,11,11,32,99, 8,19,17,17,16,99, 8, 9,99,15,17,17,21, 9,99,31,11,11,11,11,12,
	00, 0, 0, 0, 0, 1,99, 8,20,18,18,14,99,13,14,99,13,18,18,22, 9,99, 5, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 1,99, 8, 9,99,99,99,99,99,99,99,99,99,99, 8, 9,99, 5, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 1,99, 8, 9,99,27,11,11,35,35,11,11,28,99, 8, 9,99, 5, 0, 0, 0, 0, 0,
	03, 3, 3, 3, 3,34,99,13,14,99, 5, 0, 0, 0, 0, 0, 0, 1,99,13,14,99,33, 3, 3, 3, 3, 3,
	00, 0, 0, 0, 0, 0,99,99,99,99, 5, 0, 0, 0, 0, 0, 0, 1,99,99,99,99, 0, 0, 0, 0, 0, 0,
	11,11,11,11,11,32,99,15,16,99, 5, 0, 0, 0, 0, 0, 0, 1,99,15,16,99,31,11,11,11,11,11,
	00, 0, 0, 0, 0, 1,99, 8, 9,99,29, 3, 3, 3, 3, 3, 3,30,99, 8, 9,99, 5, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 1,99, 8, 9,99,99,99,99,99,99,99,99,99,99, 8, 9,99, 5, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 1,99, 8, 9,99,15,17,17,17,17,17,17,16,99, 8, 9,99, 5, 0, 0, 0, 0, 0,
	02, 3, 3, 3, 3,34,99,13,14,99,13,18,18,22,20,18,18,14,99,13,14,99,33, 3, 3, 3, 3, 4,
	01,99,99,99,99,99,99,99,99,99,99,99,99, 8, 9,99,99,99,99,99,99,99,99,99,99,99,99, 5,
	01,99,15,17,17,16,99,15,17,17,17,16,99, 8, 9,99,15,17,17,17,16,99,15,17,17,16,99, 5,
	01,99,13,18,22, 9,99,13,18,18,18,14,99,13,14,99,13,18,18,18,14,99, 8,20,18,14,99, 5,
	01,98,99,99, 8, 9,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99, 8, 9,99,99,98, 5,
	23,17,16,99, 8, 9,99,15,16,99,15,17,17,17,17,17,17,16,99,15,16,99, 8, 9,99,15,17,25,
	24,18,14,99,13,14,99, 8, 9,99,13,18,18,22,20,18,18,14,99, 8, 9,99,13,14,99,13,18,26,
	01,99,99,99,99,99,99, 8, 9,99,99,99,99, 8, 9,99,99,99,99, 8, 9,99,99,99,99,99,99, 5,
	01,99,15,17,17,17,17,21,19,17,17,16,99, 8, 9,99,15,17,17,21,19,17,17,17,17,16,99, 5,
	01,99,13,18,18,18,18,18,18,18,18,14,99,13,14,99,13,18,18,18,18,18,18,18,18,14,99, 5,
	01,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99, 5,
	10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,
	00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
};

#endif /* INCLUDE_MAP_ */